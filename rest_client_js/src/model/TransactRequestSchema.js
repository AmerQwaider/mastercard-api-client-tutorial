/**
 * MDES for Merchants
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously.  
 *
 * OpenAPI spec version: 1.2.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MdesForMerchants) {
      root.MdesForMerchants = {};
    }
    root.MdesForMerchants.TransactRequestSchema = factory(root.MdesForMerchants.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The TransactRequestSchema model module.
   * @module model/TransactRequestSchema
   * @version 1.2.7
   */

  /**
   * Constructs a new <code>TransactRequestSchema</code>.
   * @alias module:model/TransactRequestSchema
   * @class
   * @param requestId {String} Unique identifier for the request. 
   * @param tokenUniqueReference {String} Globally unique identifier for the Token, as assigned by MDES.    __Max Length:64__ 
   * @param dsrpType {String} What type of DSRP cryptogram to create. Must be either UCAF or M_CHIP.     __Max Length:64__ 
   * @param unpredictableNumber {String} HEX Encoded data (case sensitive) provided by the merchant to provide variability and uniqueness to the generation of a cryptogram.  __Length:8__ 
   */
  var exports = function(requestId, tokenUniqueReference, dsrpType, unpredictableNumber) {
    var _this = this;


    _this['requestId'] = requestId;
    _this['tokenUniqueReference'] = tokenUniqueReference;
    _this['dsrpType'] = dsrpType;
    _this['unpredictableNumber'] = unpredictableNumber;


  };

  /**
   * Constructs a <code>TransactRequestSchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TransactRequestSchema} obj Optional instance to populate.
   * @return {module:model/TransactRequestSchema} The populated <code>TransactRequestSchema</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('responseHost')) {
        obj['responseHost'] = ApiClient.convertToType(data['responseHost'], 'String');
      }
      if (data.hasOwnProperty('requestId')) {
        obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
      }
      if (data.hasOwnProperty('tokenUniqueReference')) {
        obj['tokenUniqueReference'] = ApiClient.convertToType(data['tokenUniqueReference'], 'String');
      }
      if (data.hasOwnProperty('dsrpType')) {
        obj['dsrpType'] = ApiClient.convertToType(data['dsrpType'], 'String');
      }
      if (data.hasOwnProperty('unpredictableNumber')) {
        obj['unpredictableNumber'] = ApiClient.convertToType(data['unpredictableNumber'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
      }
      if (data.hasOwnProperty('currencyCode')) {
        obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
      }
    }
    return obj;
  }

  /**
   * The host that originated the request. Future calls in the same conversation may be routed to this host. 
   * @member {String} responseHost
   */
  exports.prototype['responseHost'] = undefined;
  /**
   * Unique identifier for the request. 
   * @member {String} requestId
   */
  exports.prototype['requestId'] = undefined;
  /**
   * Globally unique identifier for the Token, as assigned by MDES.    __Max Length:64__ 
   * @member {String} tokenUniqueReference
   */
  exports.prototype['tokenUniqueReference'] = undefined;
  /**
   * What type of DSRP cryptogram to create. Must be either UCAF or M_CHIP.     __Max Length:64__ 
   * @member {String} dsrpType
   */
  exports.prototype['dsrpType'] = undefined;
  /**
   * HEX Encoded data (case sensitive) provided by the merchant to provide variability and uniqueness to the generation of a cryptogram.  __Length:8__ 
   * @member {String} unpredictableNumber
   */
  exports.prototype['unpredictableNumber'] = undefined;
  /**
   * Transaction amount to be authorized. Note that refund transactions are not supported ï¿½ this value must be a positive amount and can contain up to 12 digits, inclusive of any digits in the currency exponent.     __Max Length:13__ 
   * @member {String} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * The transaction currency. Expressed as a 3-character ISO 4217 currency code. 
   * @member {String} currencyCode
   */
  exports.prototype['currencyCode'] = undefined;



  return exports;
}));


