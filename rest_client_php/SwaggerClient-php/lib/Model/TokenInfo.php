<?php
/**
 * TokenInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * MDES for Merchants
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously.
 *
 * OpenAPI spec version: 1.2.7
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TokenInfo Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TokenInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'tokenInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'token_pan_suffix' => 'string',
        'account_pan_suffix' => 'string',
        'token_expiry' => 'string',
        'account_pan_expiry' => 'string',
        'dsrp_capable' => 'string',
        'token_assurance_level' => 'string',
        'product_category' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'token_pan_suffix' => null,
        'account_pan_suffix' => null,
        'token_expiry' => null,
        'account_pan_expiry' => null,
        'dsrp_capable' => null,
        'token_assurance_level' => null,
        'product_category' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'token_pan_suffix' => 'tokenPanSuffix',
        'account_pan_suffix' => 'accountPanSuffix',
        'token_expiry' => 'tokenExpiry',
        'account_pan_expiry' => 'accountPanExpiry',
        'dsrp_capable' => 'dsrpCapable',
        'token_assurance_level' => 'tokenAssuranceLevel',
        'product_category' => 'productCategory'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'token_pan_suffix' => 'setTokenPanSuffix',
        'account_pan_suffix' => 'setAccountPanSuffix',
        'token_expiry' => 'setTokenExpiry',
        'account_pan_expiry' => 'setAccountPanExpiry',
        'dsrp_capable' => 'setDsrpCapable',
        'token_assurance_level' => 'setTokenAssuranceLevel',
        'product_category' => 'setProductCategory'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'token_pan_suffix' => 'getTokenPanSuffix',
        'account_pan_suffix' => 'getAccountPanSuffix',
        'token_expiry' => 'getTokenExpiry',
        'account_pan_expiry' => 'getAccountPanExpiry',
        'dsrp_capable' => 'getDsrpCapable',
        'token_assurance_level' => 'getTokenAssuranceLevel',
        'product_category' => 'getProductCategory'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['token_pan_suffix'] = isset($data['token_pan_suffix']) ? $data['token_pan_suffix'] : null;
        $this->container['account_pan_suffix'] = isset($data['account_pan_suffix']) ? $data['account_pan_suffix'] : null;
        $this->container['token_expiry'] = isset($data['token_expiry']) ? $data['token_expiry'] : null;
        $this->container['account_pan_expiry'] = isset($data['account_pan_expiry']) ? $data['account_pan_expiry'] : null;
        $this->container['dsrp_capable'] = isset($data['dsrp_capable']) ? $data['dsrp_capable'] : null;
        $this->container['token_assurance_level'] = isset($data['token_assurance_level']) ? $data['token_assurance_level'] : null;
        $this->container['product_category'] = isset($data['product_category']) ? $data['product_category'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets token_pan_suffix
     *
     * @return string
     */
    public function getTokenPanSuffix()
    {
        return $this->container['token_pan_suffix'];
    }

    /**
     * Sets token_pan_suffix
     *
     * @param string $token_pan_suffix The last few digits (typically four) of the Token PAN.<br>     __Max Length:8__<br> __Required: Yes__
     *
     * @return $this
     */
    public function setTokenPanSuffix($token_pan_suffix)
    {
        $this->container['token_pan_suffix'] = $token_pan_suffix;

        return $this;
    }

    /**
     * Gets account_pan_suffix
     *
     * @return string
     */
    public function getAccountPanSuffix()
    {
        return $this->container['account_pan_suffix'];
    }

    /**
     * Sets account_pan_suffix
     *
     * @param string $account_pan_suffix The last few digits (typically four) of the Account PAN.<br>     __Max Length:8__<br> __Required: Yes__
     *
     * @return $this
     */
    public function setAccountPanSuffix($account_pan_suffix)
    {
        $this->container['account_pan_suffix'] = $account_pan_suffix;

        return $this;
    }

    /**
     * Gets token_expiry
     *
     * @return string
     */
    public function getTokenExpiry()
    {
        return $this->container['token_expiry'];
    }

    /**
     * Sets token_expiry
     *
     * @param string $token_expiry The expiry of the Token PAN, given in MMYY format.<br>     __Max Length:4__<br> __Required: Yes__
     *
     * @return $this
     */
    public function setTokenExpiry($token_expiry)
    {
        $this->container['token_expiry'] = $token_expiry;

        return $this;
    }

    /**
     * Gets account_pan_expiry
     *
     * @return string
     */
    public function getAccountPanExpiry()
    {
        return $this->container['account_pan_expiry'];
    }

    /**
     * Sets account_pan_expiry
     *
     * @param string $account_pan_expiry The expiry of the Token PAN, given in MMYY format. <br> __Max Length: 4__<br> __Required: No__
     *
     * @return $this
     */
    public function setAccountPanExpiry($account_pan_expiry)
    {
        $this->container['account_pan_expiry'] = $account_pan_expiry;

        return $this;
    }

    /**
     * Gets dsrp_capable
     *
     * @return string
     */
    public function getDsrpCapable()
    {
        return $this->container['dsrp_capable'];
    }

    /**
     * Sets dsrp_capable
     *
     * @param string $dsrp_capable Whether DSRP transactions are supported by this Token. Must be either 'true' (DSRP capable) or 'false' (Not DSRP capable).<br> __Max Length: 5__<br> __Required: Yes__
     *
     * @return $this
     */
    public function setDsrpCapable($dsrp_capable)
    {
        $this->container['dsrp_capable'] = $dsrp_capable;

        return $this;
    }

    /**
     * Gets token_assurance_level
     *
     * @return string
     */
    public function getTokenAssuranceLevel()
    {
        return $this->container['token_assurance_level'];
    }

    /**
     * Sets token_assurance_level
     *
     * @param string $token_assurance_level A value indicating the confidence level of the token to Account PAN binding.<br>     __Max Length:2__<br> __Required: No__
     *
     * @return $this
     */
    public function setTokenAssuranceLevel($token_assurance_level)
    {
        $this->container['token_assurance_level'] = $token_assurance_level;

        return $this;
    }

    /**
     * Gets product_category
     *
     * @return string
     */
    public function getProductCategory()
    {
        return $this->container['product_category'];
    }

    /**
     * Sets product_category
     *
     * @param string $product_category The product category of the Account PAN. When supplied will be one of the following values -  * CREDIT * DEBIT * PREPAID * UNKNOWN  __Max Length: 32__<br> __Required: No__
     *
     * @return $this
     */
    public function setProductCategory($product_category)
    {
        $this->container['product_category'] = $product_category;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


