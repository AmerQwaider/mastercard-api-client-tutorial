/*
 * MDES for Merchants
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously.  
 *
 * The version of the OpenAPI document: 1.2.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * \&quot;authenticationMethods not currently used for MDES for Merchants\&quot; 
 */
@ApiModel(description = "\"authenticationMethods not currently used for MDES for Merchants\" ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-07-25T13:48:59.971+02:00[Europe/Rome]")
public class AuthenticationMethods {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public AuthenticationMethods id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier assigned to this Authentication Method. 
   * @return id
  **/
  @ApiModelProperty(example = "334123523456213451345", value = "Unique identifier assigned to this Authentication Method. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AuthenticationMethods type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Specifies the authentication method type and provided in the tokenize response.  See table here - https://developer.mastercard.com/page/mdes-digitization-authentication-method-codes 
   * @return type
  **/
  @ApiModelProperty(example = "TEXT_TO_CARDHOLDER_NUMBER", value = "Specifies the authentication method type and provided in the tokenize response.  See table here - https://developer.mastercard.com/page/mdes-digitization-authentication-method-codes ")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public AuthenticationMethods value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Specifies the authentication method value (meaning varies depending on the authentication method type). 
   * @return value
  **/
  @ApiModelProperty(example = "1", value = "Specifies the authentication method value (meaning varies depending on the authentication method type). ")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationMethods authenticationMethods = (AuthenticationMethods) o;
    return Objects.equals(this.id, authenticationMethods.id) &&
        Objects.equals(this.type, authenticationMethods.type) &&
        Objects.equals(this.value, authenticationMethods.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationMethods {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

