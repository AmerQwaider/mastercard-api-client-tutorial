/*
 * MDES for Merchants
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously.  
 *
 * OpenAPI spec version: 1.2.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Error;
import io.swagger.client.model.Token;
import io.swagger.client.model.TokenDetail;
import java.io.IOException;

/**
 * GetTokenResponseSchema
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-05-29T13:19:04.981+01:00")
public class GetTokenResponseSchema {
  @SerializedName("responseId")
  private String responseId = null;

  @SerializedName("token")
  private Token token = null;

  @SerializedName("tokenDetail")
  private TokenDetail tokenDetail = null;

  @SerializedName("errorCode")
  private String errorCode = null;

  @SerializedName("errorDescription")
  private String errorDescription = null;

  @SerializedName("errors")
  private Error errors = null;

  public GetTokenResponseSchema responseId(String responseId) {
    this.responseId = responseId;
    return this;
  }

   /**
   * Unique identifier for the response. 
   * @return responseId
  **/
  @ApiModelProperty(example = "123456", value = "Unique identifier for the response. ")
  public String getResponseId() {
    return responseId;
  }

  public void setResponseId(String responseId) {
    this.responseId = responseId;
  }

  public GetTokenResponseSchema token(Token token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(value = "")
  public Token getToken() {
    return token;
  }

  public void setToken(Token token) {
    this.token = token;
  }

  public GetTokenResponseSchema tokenDetail(TokenDetail tokenDetail) {
    this.tokenDetail = tokenDetail;
    return this;
  }

   /**
   * Get tokenDetail
   * @return tokenDetail
  **/
  @ApiModelProperty(value = "")
  public TokenDetail getTokenDetail() {
    return tokenDetail;
  }

  public void setTokenDetail(TokenDetail tokenDetail) {
    this.tokenDetail = tokenDetail;
  }

  public GetTokenResponseSchema errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * __CONDITIONAL__&lt;br&gt; Returned in the event of and error and contains the reason the operation failed. Only use if errors object is not present.&lt;br&gt; __Max Length: 32__ 
   * @return errorCode
  **/
  @ApiModelProperty(value = "__CONDITIONAL__<br> Returned in the event of and error and contains the reason the operation failed. Only use if errors object is not present.<br> __Max Length: 32__ ")
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }

  public GetTokenResponseSchema errorDescription(String errorDescription) {
    this.errorDescription = errorDescription;
    return this;
  }

   /**
   * __CONDITIONAL__&lt;br&gt; Returned in the event of and error and contains a description of why the operation failed. Only use if errors object is not present.&lt;br&gt; __Max Length: 32__   
   * @return errorDescription
  **/
  @ApiModelProperty(value = "__CONDITIONAL__<br> Returned in the event of and error and contains a description of why the operation failed. Only use if errors object is not present.<br> __Max Length: 32__   ")
  public String getErrorDescription() {
    return errorDescription;
  }

  public void setErrorDescription(String errorDescription) {
    this.errorDescription = errorDescription;
  }

  public GetTokenResponseSchema errors(Error errors) {
    this.errors = errors;
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @ApiModelProperty(value = "")
  public Error getErrors() {
    return errors;
  }

  public void setErrors(Error errors) {
    this.errors = errors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetTokenResponseSchema getTokenResponseSchema = (GetTokenResponseSchema) o;
    return Objects.equals(this.responseId, getTokenResponseSchema.responseId) &&
        Objects.equals(this.token, getTokenResponseSchema.token) &&
        Objects.equals(this.tokenDetail, getTokenResponseSchema.tokenDetail) &&
        Objects.equals(this.errorCode, getTokenResponseSchema.errorCode) &&
        Objects.equals(this.errorDescription, getTokenResponseSchema.errorDescription) &&
        Objects.equals(this.errors, getTokenResponseSchema.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseId, token, tokenDetail, errorCode, errorDescription, errors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetTokenResponseSchema {\n");
    
    sb.append("    responseId: ").append(toIndentedString(responseId)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    tokenDetail: ").append(toIndentedString(tokenDetail)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorDescription: ").append(toIndentedString(errorDescription)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

